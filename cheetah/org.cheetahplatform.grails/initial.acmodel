<?xml version="1.0" encoding="ASCII"?>
<pmsEditor.acmodel:SuperRepository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:pmsEditor.acmodel="http:///pmsEditor/acmodel.ecore" name="initial" iD="1246216542253" constraints="&lt;secServ.queries.ConstraintSuperRepository>&#xA;  &lt;executionConstraints>&#xA;    &lt;constraintTemplates>&#xA;      &lt;secServ.queries.ExecutionConstraintTemplate>&#xA;        &lt;relevantObjects>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>taskB&lt;/name>&#xA;            &lt;dataType>ACTIVITY&lt;/dataType>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;        &lt;/relevantObjects>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>ProcessInstance&lt;/contextName>&#xA;            &lt;name>Last Entry A&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>latestA : LogEntry = self.logEntries-&amp;gt;iterate(entry : LogEntry; acc : LogEntry = null | if ((entry.task  = &lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;                &lt;secServ.queries.ParameterExpression>&#xA;                  &lt;name>taskA&lt;/name>&#xA;                  &lt;dataType reference=&quot;../../../../../../relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;                &lt;/secServ.queries.ParameterExpression>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression> and entry.eventType.name = &amp;apos;complete&amp;apos;) and (acc = null or acc.date &amp;lt; entry.date)) then entry else acc endif)&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>ProcessInstance&lt;/contextName>&#xA;            &lt;name>Last Entry B&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>latestB : LogEntry = self.logEntries-&amp;gt;iterate(entry : LogEntry; acc : LogEntry = null | if ((entry.task  = &lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;                &lt;secServ.queries.ParameterExpression reference=&quot;../../../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression> and entry.eventType.name = &amp;apos;complete&amp;apos;) and (acc = null or acc.date &amp;lt; entry.date)) then entry else acc endif)&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType>INTEGER&lt;/dataType>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Alternate Precedence&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>(self.latestA &amp;lt;&amp;gt; null ) and ((self.latestB = null) or (self.latestA.date &amp;gt; self.latestB.date))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.ExecutionConstraintTemplate>&#xA;      &lt;secServ.queries.ExecutionConstraintTemplate>&#xA;        &lt;relevantObjects>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>taskA&lt;/name>&#xA;            &lt;dataType reference=&quot;../../../../secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>taskB&lt;/name>&#xA;            &lt;dataType reference=&quot;../../../../secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;        &lt;/relevantObjects>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Binding of Duties&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>(self.logEntries-&amp;gt;select(entry | (entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> or entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression[2]&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>) and (entry.eventType.name=&amp;apos;complete&amp;apos;))-&amp;gt;isEmpty()) or (self.logEntries-&amp;gt;select(entry | (entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.user = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../userParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>  and (entry.eventType.name=&amp;apos;complete&amp;apos;)) or (entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression[2]&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.user = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../userParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>  and (entry.eventType.name=&amp;apos;complete&amp;apos;))))-&amp;gt;notEmpty()&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.ExecutionConstraintTemplate>&#xA;      &lt;secServ.queries.ExecutionConstraintTemplate>&#xA;        &lt;relevantObjects>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>taskA&lt;/name>&#xA;            &lt;dataType reference=&quot;../../../../secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>taskB&lt;/name>&#xA;            &lt;dataType reference=&quot;../../../../secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;        &lt;/relevantObjects>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Negation Coexistence&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>(not (self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name =&amp;apos;complete&amp;apos;)-&amp;gt;notEmpty() or self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression[2]&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name =&amp;apos;complete&amp;apos;)-&amp;gt;notEmpty())) or (self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name =&amp;apos;complete&amp;apos;)-&amp;gt;notEmpty() and &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../objectParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>) or(self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression[2]&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name =&amp;apos;complete&amp;apos;)-&amp;gt;notEmpty() and &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../objectParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression[2]&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>)&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.ExecutionConstraintTemplate>&#xA;      &lt;secServ.queries.ExecutionConstraintTemplate>&#xA;        &lt;relevantObjects>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>task&lt;/name>&#xA;            &lt;dataType reference=&quot;../../../../secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;        &lt;/relevantObjects>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Max Select&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name =&amp;apos;complete&amp;apos;)-&amp;gt;size()&amp;lt; &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression>&#xA;              &lt;name>max&lt;/name>&#xA;              &lt;dataType reference=&quot;../../../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;            &lt;/secServ.queries.ParameterExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.ExecutionConstraintTemplate>&#xA;      &lt;secServ.queries.ExecutionConstraintTemplate>&#xA;        &lt;relevantObjects>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>taskA&lt;/name>&#xA;            &lt;dataType reference=&quot;../../../../secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;          &lt;secServ.queries.ParameterExpression>&#xA;            &lt;name>taskB&lt;/name>&#xA;            &lt;dataType reference=&quot;../../../../secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;          &lt;/secServ.queries.ParameterExpression>&#xA;        &lt;/relevantObjects>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Seperation of Duties&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>(self.logEntries-&amp;gt;select(entry | (entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.user = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../userParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name=&amp;apos;complete&amp;apos;) or (entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../relevantObjects/secServ.queries.ParameterExpression[2]&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.user = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../userParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name=&amp;apos;complete&amp;apos;))-&amp;gt;isEmpty()) or (self.logEntries-&amp;gt;select(entry | (entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../objectParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.user = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression reference=&quot;../../../userParameter&quot;/>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name=&amp;apos;complete&amp;apos;)))-&amp;gt;notEmpty()&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.ExecutionConstraintTemplate>&#xA;    &lt;/constraintTemplates>&#xA;  &lt;/executionConstraints>&#xA;  &lt;terminationConstraints>&#xA;    &lt;constraintTemplates>&#xA;      &lt;secServ.queries.TerminationConstraintTemplate>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Min Select&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression>&#xA;              &lt;name>task&lt;/name>&#xA;              &lt;dataType reference=&quot;../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;            &lt;/secServ.queries.ParameterExpression>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>)-&amp;gt;size() &amp;gt;= &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression>&#xA;              &lt;name>min&lt;/name>&#xA;              &lt;dataType reference=&quot;../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;            &lt;/secServ.queries.ParameterExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.TerminationConstraintTemplate>&#xA;      &lt;secServ.queries.TerminationConstraintTemplate>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>ProcessInstance&lt;/contextName>&#xA;            &lt;name>Latest A Response&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>latestA : LogEntry = self.logEntries-&amp;gt;iterate(entry : LogEntry; acc : LogEntry = null | if ((entry.task  = &lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;                &lt;secServ.queries.ParameterExpression>&#xA;                  &lt;name>taskA&lt;/name>&#xA;                  &lt;dataType reference=&quot;../../../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;                &lt;/secServ.queries.ParameterExpression>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression> and entry.eventType.name = &amp;apos;complete&amp;apos;) and (acc = null or acc.date &amp;lt; entry.date)) then entry else acc endif)&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>ProcessInstance&lt;/contextName>&#xA;            &lt;name>Latest B Response&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>latestB : LogEntry = self.logEntries-&amp;gt;iterate(entry : LogEntry; acc : LogEntry = null | if ((entry.task  = &lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;                &lt;secServ.queries.ParameterExpression>&#xA;                  &lt;name>taskB&lt;/name>&#xA;                  &lt;dataType reference=&quot;../../../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;                &lt;/secServ.queries.ParameterExpression>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression> and entry.eventType.name = &amp;apos;complete&amp;apos;) and (acc = null or acc.date &amp;lt; entry.date)) then entry else acc endif)&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Response&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>(self.latestA = null) or ((self.latestB &amp;lt;&amp;gt; null) and (self.latestA.date &amp;lt; self.latestB.date))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.TerminationConstraintTemplate>&#xA;      &lt;secServ.queries.TerminationConstraintTemplate>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Existence Responce&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression>&#xA;              &lt;name>taskA&lt;/name>&#xA;              &lt;dataType reference=&quot;../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;            &lt;/secServ.queries.ParameterExpression>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>)-&amp;gt;notEmpty() implies self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression>&#xA;              &lt;name>taskB&lt;/name>&#xA;              &lt;dataType reference=&quot;../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;            &lt;/secServ.queries.ParameterExpression>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>)-&amp;gt;notEmpty()&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.TerminationConstraintTemplate>&#xA;      &lt;secServ.queries.TerminationConstraintTemplate>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Co Existence&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>not (self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression>&#xA;              &lt;name>taskA&lt;/name>&#xA;              &lt;dataType reference=&quot;../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;            &lt;/secServ.queries.ParameterExpression>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name =&amp;apos;complete&amp;apos;)-&amp;gt;notEmpty() xor self.logEntries-&amp;gt;select(entry | entry.task = &lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;            &lt;secServ.queries.ParameterExpression>&#xA;              &lt;name>taskB&lt;/name>&#xA;              &lt;dataType reference=&quot;../../../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/relevantObjects/secServ.queries.ParameterExpression/dataType&quot;/>&#xA;            &lt;/secServ.queries.ParameterExpression>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression> and entry.eventType.name =&amp;apos;complete&amp;apos;)-&amp;gt;notEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/secServ.queries.TerminationConstraintTemplate>&#xA;    &lt;/constraintTemplates>&#xA;  &lt;/terminationConstraints>&#xA;  &lt;compoundConstraints/>&#xA;  &lt;definesSuperRepository>&#xA;    &lt;attributeRepository class=&quot;secServ.queries.defines.AttributeDefineRepository&quot;>&#xA;      &lt;defines>&#xA;        &lt;secServ.queries.defines.AttributeDefine reference=&quot;../../../../terminationConstraints/constraintTemplates/secServ.queries.TerminationConstraintTemplate[2]/attributeDefines/secServ.queries.defines.AttributeDefine&quot;/>&#xA;        &lt;secServ.queries.defines.AttributeDefine reference=&quot;../../../../terminationConstraints/constraintTemplates/secServ.queries.TerminationConstraintTemplate[2]/attributeDefines/secServ.queries.defines.AttributeDefine[2]&quot;/>&#xA;        &lt;secServ.queries.defines.AttributeDefine reference=&quot;../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/attributeDefines/secServ.queries.defines.AttributeDefine&quot;/>&#xA;        &lt;secServ.queries.defines.AttributeDefine reference=&quot;../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/attributeDefines/secServ.queries.defines.AttributeDefine[2]&quot;/>&#xA;      &lt;/defines>&#xA;    &lt;/attributeRepository>&#xA;    &lt;operationRepository class=&quot;secServ.queries.defines.OperationDefineRepository&quot;>&#xA;      &lt;defines/>&#xA;    &lt;/operationRepository>&#xA;  &lt;/definesSuperRepository>&#xA;  &lt;processSchemaIdToConstraints/>&#xA;  &lt;buildTimeConstraints>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>User &amp;quot;%s&amp;quot; has no password&lt;/messagePattern>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>User without Password&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.userRepository.users-&amp;gt;select(u : User | u.password = &amp;apos;&amp;apos; or u.password = null)&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>User without Password&lt;/name>&#xA;      &lt;id>1246216542283&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have a object repository, process type group or process type as object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Create Schema&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | p.operation.name=&amp;apos;CreateSchema&amp;apos; and not (p.object-&amp;gt;notEmpty() and (p.object.oclIsTypeOf(ObjectRepository) or p.object.oclIsTypeOf(ProcessTypeGroup)or p.object.oclIsTypeOf(ProcessType))))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Create Schema&lt;/name>&#xA;      &lt;id>1246216542293&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>User &amp;quot;%s&amp;quot; has no roles assigned&lt;/messagePattern>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>User without Role&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.userRepository.users-&amp;gt;select(u : User | u.roles-&amp;gt;isEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>User without Role&lt;/name>&#xA;      &lt;id>1246216542285&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilige &amp;quot;%s&amp;quot; must have an activity, activity group, activity template or activity template group as object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Notify User&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | p.operation.name=&amp;apos;NotifyUser&amp;apos; and (p.object-&amp;gt;isEmpty() or not (p.object.oclIsTypeOf(Activity) or p.object.oclIsTypeOf(ActivityGroup) or p.object.oclIsTypeOf(ActivityTemplate) or p.object.oclIsTypeOf(ActivityTemplateGroup))))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Notify User&lt;/name>&#xA;      &lt;id>1246216542298&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must not have a change command&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Superfluous Change Command&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | (not (p.operation.name=&amp;apos;ChangeProcess&amp;apos; or p.operation.name=&amp;apos;ProcessTypeChange&amp;apos; or p.operation.name=&amp;apos;ProcessInstanceChange&amp;apos; or p.operation.name=&amp;apos;DefineNewProcessInstanceChange&amp;apos; or p.operation.name=&amp;apos;ReuseExistingProcessInstanceChange&amp;apos;)) and p.changeCommand-&amp;gt;notEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Superfluous Change Command&lt;/name>&#xA;      &lt;id>1246216542290&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have an operation&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Missing Operation&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p : Privilege | p.operation-&amp;gt;isEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Missing Operation&lt;/name>&#xA;      &lt;id>1246216542288&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have an activity, activity group, activity template or activity template group as object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Monitor Process Instance&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | p.operation.name=&amp;apos;MonitorProcessInstance&amp;apos; and (p.object-&amp;gt;isEmpty() or not (p.object.oclIsTypeOf(Activity) or p.object.oclIsTypeOf(ActivityGroup) or p.object.oclIsTypeOf(ActivityTemplate) or p.object.oclIsTypeOf(ActivityTemplateGroup))))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Monitor Process Instance&lt;/name>&#xA;      &lt;id>1246216542297&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>There is more than user with the name &amp;quot;%s&amp;quot;&lt;/messagePattern>&#xA;        &lt;attributeDefines/>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Users with same Name&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.userRepository.users-&amp;gt;select(u1 : User | self.userRepository.users-&amp;gt;select(u2 : User | u1 &amp;lt;&amp;gt; u2 and u1.name = u2.name)-&amp;gt;notEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Users with same Name&lt;/name>&#xA;      &lt;id>1246216542284&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have am activity template or activity template group as object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Change Operation&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | (p.changeCommand.name=&amp;apos;OrderChangingCommand&amp;apos; or p.changeCommand.name=&amp;apos;SerialMove&amp;apos;) and (p.object-&amp;gt;isEmpty() or not(p.object.oclIsTypeOf(ActivityTemplate) or p.object.oclIsTypeOf(ActivityTemplateGroup))))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Change Operation&lt;/name>&#xA;      &lt;id>1246216542292&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have a object repository, process type group, process type or process schema as object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Instantiate Schema&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | p.operation.name=&amp;apos;InstantiateSchema&amp;apos; and (p.object-&amp;gt;isEmpty() or not (p.object.oclIsTypeOf(ObjectRepository) or p.object.oclIsTypeOf(ProcessType) or p.object.oclIsTypeOf(ProcessTypeGroup) or p.object.oclIsTypeOf(ProcessSchema))))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Instantiate Schema&lt;/name>&#xA;      &lt;id>1246216542295&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have a subject&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Missing Subject&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p : Privilege | (p.changeCommand.name=&amp;apos;AdditiveCommand&amp;apos; or p.changeCommand.name=&amp;apos;SerialInsert&amp;apos; or p.changeCommand.name=&amp;apos;ParallelInsert&amp;apos;) and p.subject-&amp;gt;isEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Missing Subject&lt;/name>&#xA;      &lt;id>1246216542289&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must not have a subject&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Superfluous Subject&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p : Privilege | (not (p.changeCommand.name=&amp;apos;AdditiveCommand&amp;apos; or p.changeCommand.name=&amp;apos;SerialInsert&amp;apos; or p.changeCommand.name=&amp;apos;ParallelInsert&amp;apos;)) and p.subject-&amp;gt;notEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Superfluous Subject&lt;/name>&#xA;      &lt;id>1246216542291&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have an activity or activity group as object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Execute Activity&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | p.operation.name=&amp;apos;ExecuteActivity&amp;apos; and (p.object-&amp;gt;isEmpty() or not(p.object.oclIsTypeOf(Activity) or p.object.oclIsTypeOf(ActivityGroup))))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Execute Activity&lt;/name>&#xA;      &lt;id>1246216542294&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; can only have an activity template or activity template group as object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Additive Change Command&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | ((p.changeCommand.name=&amp;apos;AdditiveCommand&amp;apos;) or (p.changeCommand.name=&amp;apos;SerialInsert&amp;apos;) or (p.changeCommand.name=&amp;apos;ParallelInsert&amp;apos;)) and (p.object-&amp;gt;isEmpty() or not (p.object.oclIsTypeOf(ActivityTemplate) or p.object.oclIsTypeOf(ActivityTemplateGroup))))&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Additive Change Command&lt;/name>&#xA;      &lt;id>1246216542287&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Role &amp;quot;%s&amp;quot; has no privileges&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>roles : Sequence(Role) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.roleRepository.roles))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines>&#xA;          &lt;secServ.queries.defines.OperationDefine>&#xA;            &lt;contextName>Role&lt;/contextName>&#xA;            &lt;name>Operation Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>childRolesWithSelf() : OrderedSet(Role) = (self.subRoles-&amp;gt;iterate(r : Role; acc : OrderedSet(Role) = OrderedSet {} | (acc-&amp;gt;union(r.childRolesWithSelf())-&amp;gt;asOrderedSet()))-&amp;gt;including(self))-&amp;gt;asOrderedSet()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.OperationDefine>&#xA;          &lt;secServ.queries.defines.OperationDefine>&#xA;            &lt;contextName>Role&lt;/contextName>&#xA;            &lt;name>Operation Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>childRoles() : OrderedSet(Role) = self.subRoles-&amp;gt;iterate(r : Role; acc : OrderedSet(Role) = OrderedSet {} | (acc-&amp;gt;union(r.childRolesWithSelf())-&amp;gt;asOrderedSet()))-&amp;gt;asOrderedSet()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.OperationDefine>&#xA;          &lt;secServ.queries.defines.OperationDefine>&#xA;            &lt;contextName>Role&lt;/contextName>&#xA;            &lt;name>Operation Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>rwp() : Boolean = self.childRoles()-&amp;gt;reject(r : Role | r.rwp())-&amp;gt;isEmpty() and self.privileges-&amp;gt;isEmpty()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.OperationDefine>&#xA;          &lt;secServ.queries.defines.OperationDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Operation Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>allRoles() : OrderedSet(Role) = self.roles-&amp;gt;iterate(r : Role; acc : OrderedSet(Role) = OrderedSet {} | (acc-&amp;gt;union(r.childRolesWithSelf())-&amp;gt;asOrderedSet()))&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.OperationDefine>&#xA;        &lt;/operationDefines>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Roles without Privilege&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.allRoles()-&amp;gt;select(r : Role | r.rwp())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Roles without Privilege&lt;/name>&#xA;      &lt;id>1246216542299&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have an object&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Missing Object&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | p.object = null)&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Missing Object&lt;/name>&#xA;      &lt;id>1246216542296&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;    &lt;secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;      &lt;template class=&quot;secServ.queries.BuildTimeConstraintTemplate&quot;>&#xA;        &lt;messagePattern>Privilege &amp;quot;%s&amp;quot; must have a change command&lt;/messagePattern>&#xA;        &lt;attributeDefines>&#xA;          &lt;secServ.queries.defines.AttributeDefine>&#xA;            &lt;contextName>SuperRepository&lt;/contextName>&#xA;            &lt;name>Attribute Define&lt;/name>&#xA;            &lt;expression>&#xA;              &lt;children>&#xA;                &lt;secServ.queries.SimpleExpression>&#xA;                  &lt;expression>privileges : Sequence(Privilege) = self.objectRepository.processTypeRepository.processTypes-&amp;gt;collect(type:ProcessType | type.processSchemas-&amp;gt;collect(schema:ProcessSchema | schema.privilegeRepository.privileges))-&amp;gt;flatten()&lt;/expression>&#xA;                &lt;/secServ.queries.SimpleExpression>&#xA;              &lt;/children>&#xA;            &lt;/expression>&#xA;          &lt;/secServ.queries.defines.AttributeDefine>&#xA;        &lt;/attributeDefines>&#xA;        &lt;operationDefines/>&#xA;        &lt;userParameter>&#xA;          &lt;name>user&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/userParameter>&#xA;        &lt;objectParameter>&#xA;          &lt;name>object&lt;/name>&#xA;          &lt;dataType reference=&quot;../../../../../executionConstraints/constraintTemplates/secServ.queries.ExecutionConstraintTemplate/userParameter/dataType&quot;/>&#xA;        &lt;/objectParameter>&#xA;        &lt;name>Missing Change Command&lt;/name>&#xA;        &lt;expression>&#xA;          &lt;children>&#xA;            &lt;secServ.queries.SimpleExpression>&#xA;              &lt;expression>self.privileges-&amp;gt;select(p: Privilege | (p.operation.name=&amp;apos;ChangeProcess&amp;apos; or p.operation.name=&amp;apos;ProcessTypeChange&amp;apos; or p.operation.name=&amp;apos;ProcessInstanceChange&amp;apos; or p.operation.name=&amp;apos;DefineNewProcessInstanceChange&amp;apos; or p.operation.name=&amp;apos;ReuseExistingProcessInstanceChange&amp;apos;) and p.changeCommand-&amp;gt;isEmpty())&lt;/expression>&#xA;            &lt;/secServ.queries.SimpleExpression>&#xA;          &lt;/children>&#xA;        &lt;/expression>&#xA;      &lt;/template>&#xA;      &lt;environment>&#xA;        &lt;bindings/>&#xA;      &lt;/environment>&#xA;      &lt;name>Missing Change Command&lt;/name>&#xA;      &lt;id>1246216542286&lt;/id>&#xA;    &lt;/secServ.queries.buildtime.BuildTimeConstraintInstance>&#xA;  &lt;/buildTimeConstraints>&#xA;&lt;/secServ.queries.ConstraintSuperRepository>">
  <userRepository iD="1246216542255"/>
  <operationRepository>
    <operations name="AllOperations" iD="10001" subOperations="//@operationRepository/@operations.1 //@operationRepository/@operations.6 //@operationRepository/@operations.7 //@operationRepository/@operations.8 //@operationRepository/@operations.9 //@operationRepository/@operations.10 //@operationRepository/@operations.11"/>
    <operations name="ChangeProcess" iD="10002" subOperations="//@operationRepository/@operations.2 //@operationRepository/@operations.3"/>
    <operations name="ProcessTypeChange" iD="10003"/>
    <operations name="ProcessInstanceChange" iD="10004" subOperations="//@operationRepository/@operations.4 //@operationRepository/@operations.5"/>
    <operations name="DefineNewProcessInstanceChange" iD="10005"/>
    <operations name="ReuseExistingProcessInstanceChange" iD="10006"/>
    <operations name="CreateSchema" iD="10007"/>
    <operations name="ExecuteActivity" iD="10008"/>
    <operations name="GrantPrivilege" iD="10009"/>
    <operations name="InstantiateSchema" iD="100010"/>
    <operations name="MonitorProcessInstance" iD="100011"/>
    <operations name="NotifyUser" iD="100012"/>
  </operationRepository>
  <changeCommandRepository>
    <changeCommands name="AllChangeCommands" iD="100013" subChangeCommands="//@changeCommandRepository/@changeCommands.1 //@changeCommandRepository/@changeCommands.3 //@changeCommandRepository/@changeCommands.6"/>
    <changeCommands name="SubtractiveCommand" iD="100014" subChangeCommands="//@changeCommandRepository/@changeCommands.2"/>
    <changeCommands name="DeleteActivity" iD="100015"/>
    <changeCommands name="AdditiveCommand" iD="100016" subChangeCommands="//@changeCommandRepository/@changeCommands.4 //@changeCommandRepository/@changeCommands.5"/>
    <changeCommands name="SerialInsert" iD="100017"/>
    <changeCommands name="ParallelInsert" iD="100018"/>
    <changeCommands name="OrderChangingCommand" iD="100019" subChangeCommands="//@changeCommandRepository/@changeCommands.7"/>
    <changeCommands name="SerialMove" iD="100020"/>
  </changeCommandRepository>
  <objectRepository name="Object Repository" iD="1246216542257">
    <activityTemplateRepository name="Activitytemplate Repository" iD="1246216542259"/>
    <activityTemplateGroupRepository name="Activitytemplate Group Repository" iD="1246216542258"/>
    <processTypeRepository name="Processtype Repository" iD="1246216542261">
      <processTypes name="schema" iD="1246216542310">
        <processSchemas name="proschem" iD="1246216542311">
          <processSegmentRepository name="Process Segment Repository" iD="1246216542318"/>
          <activityRepository name="Activity Repository" iD="1246216542315">
            <activities name="EingabePersonendaten" iD="1246216542325" inputObjects="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.0" successor="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.1"/>
            <activities name="EingabeReiseziel" iD="1246216542330" inputObjects="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.1" successor="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.2" predecessors="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.0"/>
            <activities name="FlugBuchen" iD="1246216542331" inputObjects="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.2" successor="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.3" predecessors="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.1"/>
            <activities name="HotelBuchen" iD="1248117330166" inputObjects="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.3" successor="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.4" predecessors="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.2"/>
            <activities name="Fertig" iD="1248117330168" predecessors="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.3"/>
          </activityRepository>
          <processSegmentGroupRepository name="Process Segment Group Repository" iD="1246216542317"/>
          <activityGroupRepository name="Activity Group Repository" iD="1246216542316"/>
          <gatewayRepository/>
          <referenceRepository iD="1246216542319">
            <references name="Kontakdaten" iD="1246216542333" min="1" max="1" businessObject="//@businessObjectRepository/@businessObjects.0" output="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.0"/>
            <references name="Reiseziel" iD="1246216542334" min="1" max="1" businessObject="//@businessObjectRepository/@businessObjects.1" output="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.1"/>
            <references name="FlugDatum" iD="1248117330165" min="1" max="1" businessObject="//@businessObjectRepository/@businessObjects.2" output="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.2"/>
            <references name="HotelName" iD="1248117330167" min="1" max="1" businessObject="//@businessObjectRepository/@businessObjects.3" output="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.3"/>
          </referenceRepository>
          <roleRepository iD="1246216542320"/>
          <privilegeRepository/>
        </processSchemas>
      </processTypes>
    </processTypeRepository>
    <processTypeGroupRepository name="Processtypegroup Repository" iD="1246216542260"/>
  </objectRepository>
  <businessObjectRepository iD="1246216542256">
    <businessObjects name="Personendaten" iD="1246216542304">
      <attributes name="Vorname" iD="1246216542308" max="1"/>
      <attributes name="Nachname" iD="1246216542309" max="1"/>
    </businessObjects>
    <businessObjects name="Reiseziel" iD="1246216542305">
      <attributes name="Resisedomizil" iD="1248117330091" max="1"/>
    </businessObjects>
    <businessObjects name="FlugDatum" iD="1246216542306">
      <attributes name="Datum" iD="1246216542307" max="1" type="Integer"/>
    </businessObjects>
    <businessObjects name="Hotel" iD="1248117330154">
      <attributes name="HotelName" iD="1248117330155" max="1"/>
    </businessObjects>
  </businessObjectRepository>
  <oCLQueryRepository iD="1246216542262"/>
  <visualizationDatabase>
    <visualizations x="210" y="233" width="138" height="66" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.1"/>
    <visualizations x="22" y="221" width="148" height="76" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.0"/>
    <visualizations x="415" y="234" width="136" height="65" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.2"/>
    <visualizations x="408" y="132" width="114" height="25" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.2"/>
    <visualizations x="237" y="132" width="138" height="25" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.1"/>
    <visualizations x="30" y="132" width="152" height="25" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.0"/>
    <visualizations x="566" y="132" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.3"/>
    <visualizations x="611" y="235" width="138" height="63" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@referenceRepository/@references.3"/>
    <visualizations x="676" y="49" width="57" height="23" context="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0" applicableObject="//@objectRepository/@processTypeRepository/@processTypes.0/@processSchemas.0/@activityRepository/@activities.4"/>
  </visualizationDatabase>
  <bendPontDatabase/>
</pmsEditor.acmodel:SuperRepository>
